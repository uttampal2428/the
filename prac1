1a. Create a simple calculator application using servlet.  
index.html  
<html> 
<head> 
<title>calculator App</title> 
</head> 
<body> 
<form method="post" action ="CalculatorServlet"> 
 Enter First Number <input type="text" name="txtN1"><br> 
 Enter Second Number <input type="text" name="txtN2"><br> 
 Select an Operation 
<input type="radio" name="opr" value="+">ADDITION 
<input type="radio" name="opr" value="-">SUBSTRACTION 
<input type="radio" name="opr" value="*">MULTIPLY 
<input type="radio" name="opr" value="/">DIVIDE 
<input type="reset"> 
<input type="submit" value="Calculate"> 
</form> 
</body> 
</html> 
CalculatorServlet.java  
package Mypack; 
import java.io.IOException;  
import java.io.PrintWriter;  
import jakarta.servlet.ServletException;  
import jakarta.servlet.http.HttpServlet;  
import jakarta.servlet.http.HttpServletRequest;  
import jakarta.servlet.http.HttpServletResponse;  
import jakarta.annotation.*; 
import jakarta.servlet.annotation.WebServlet; 
@WebServlet("/CalculatorServlet") 
public class CalculatorServlet extends HttpServlet {  
public void doGet(HttpServletRequest request, HttpServletResponse response)  
throws ServletException, IOException {  
response.setContentType("text/html;charset=UTF-8");  
PrintWriter out = response.getWriter();  
out.println("<html><head><title>Servlet CalculatorServlet</title></head><body>");  double n1 = Double.parseDouble(request.getParameter("txtN1"));  
double n2 = Double.parseDouble(request.getParameter("txtN2")); 
double result =0;  
String opr=request.getParameter("opr");  
if(opr.equals("+")) result=n1+n2; if(opr.equals("-")) result=n1-n2;  if(opr.equals("*")) result=n1*n2; if(opr.equals("/")) result=n1/n2;  out.println("<h1> Result = "+result); out.println("</body></html>");} }


1b. Create a servlet for a login page. If the username and password are correct then it says message “Hello  <username>” else a message “login failed”  

index.html  
<html> 
<head> 
<title>Login Form</title> 
</head> 
<form action="LoginServlet"> 
 Enter User ID<input type="text" name="txtId"><br> 
 Enter Password<input type="password" name="txtPass"><br> 
<input type="reset"> 
<input type="submit" value=" Click to Login " > 
</form> 
</html> 

LoginServlet.java 

package MyPack; 
import java.io.IOException; 
import java.io.PrintWriter; 
import jakarta.servlet.ServletException; 
import jakarta.servlet.annotation.WebServlet; 
import jakarta.servlet.http.HttpServlet; 
import jakarta.servlet.http.HttpServletRequest; 
import jakarta.servlet.http.HttpServletResponse; 
@WebServlet(name = "LoginServlet", urlPatterns = {"/LoginServlet"}) 
public class LoginServlet extends HttpServlet { 
@Override 
public void doGet(HttpServletRequest request, HttpServletResponse response) 
throws ServletException, IOException { 
response.setContentType("text/html;charset=UTF-8"); 
PrintWriter out = response.getWriter(); 
out.println("<html><head><title>Servlet LoginServlet</title></head>"); 
String uname = request.getParameter("txtId"); 
String upass = request.getParameter("txtPass"); 
if(uname.equals("admin") &&upass.equals("12345")){ 
out.println("<body bgcolor=blue >"); 
out.println("<h1> Welcome !!! "+uname+"</h1>"); 
} 
else{ 
out.println("<body bgcolor=red >");out.println("<h1> Login Fail !!! </h1>"); 
} 
out.println("</body></html>");}}


1c. Create a registration servlet in Java using JDBC. Accept the details such as Username, Password, Email, and  Country from the user using HTML Form and store the registration details in the database.



Index.html 
<html> 
<head> 
<title>Registration Page</title> 
<meta charset="UTF-8"> 
<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
</head> 
<body> 
<form action="RegisterServlet" > 
<H1>Welcome to Registration page</H1> 
Enter User Name <input type="text" name="txtUid"><br> 
Enter Password <input type="password" name="txtPass"><br> 
Enter Email <input type="text" name="txtEmail" ><br> 
Enter Country <input type="text" name="txtCon" ><br> 
<input type="reset" ><input type="submit" value="REGISTER" > 
</form> 
</body> 
</html> 

The @WebServlet annotation in Java is used to declare a servlet and configure its deployment directly in the code,  rather than in the web.xml deployment descriptor. 
RegisterServlet.java 


package MyPack; 
importjava.io.IOException; 
import java.io.PrintWriter; 
import jakarta.servlet.ServletException; 
importjakarta.servlet.annotation.WebServlet; 
importjakarta.servlet.http.HttpServlet; 
import jakarta.servlet.http.HttpServletRequest; 
import jakarta.servlet.http.HttpServletResponse; 
import java.sql.*; 
@WebServlet(name = "RegisterServlet", urlPatterns = {"/RegisterServlet"}) 
public class RegisterServlet extends HttpServlet { 
 @Override 
 public void doGet(HttpServletRequest request, HttpServletResponse response) 
throws ServletException, IOException { 
response.setContentType("text/html;charset=UTF-8"); 
PrintWriter out = response.getWriter(); 
String id = request.getParameter("txtUid"); 
String ps = request.getParameter("txtPass"); 
String em = request.getParameter("txtEmail"); 
String co = request.getParameter("txtCon"); 
String url = "jdbc:mysql://localhost:3306/logindb?autoReconnect=true&useSSL=false"; 
String username = "root"; 
String password = "tiger"; 
try{ 
Class.forName("com.mysql.cj.jdbc.Driver"); 
 Connection con = DriverManager.getConnection(url,username,password);
PreparedStatementpst = con.prepareStatement("insert into user values(?,?,?,?)"); pst.setString(1,id); 
pst.setString(2,ps); 
pst.setString(3,em); 
pst.setString(4,co);  
pst.executeUpdate(); 
out.println("<h1> Inserted Succesfullyyyyy</h1>"); 
}catch(ClassNotFoundException | SQLException e){out.println(e);} } 
}
